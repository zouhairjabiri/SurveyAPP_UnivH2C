{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\zouhair\\\\works\\\\Desktop\\\\Les Projets\\\\APP2 covid\\\\TeleCovid_SurveyApp-Frontend\\\\node_modules\\\\react-native-indicators\\\\src\\\\components\\\\pulse-indicator\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Indicator from \"../indicator\";\nimport styles from \"./styles\";\n\nvar PulseIndicator = function (_PureComponent) {\n  _inherits(PulseIndicator, _PureComponent);\n\n  var _super = _createSuper(PulseIndicator);\n\n  function PulseIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, PulseIndicator);\n\n    _this = _super.call(this, props);\n    _this.renderComponent = _this.renderComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PulseIndicator, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var index = _ref.index,\n          count = _ref.count,\n          progress = _ref.progress;\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color;\n      var pulseStyle = {\n        height: size,\n        width: size,\n        borderRadius: size / 2,\n        backgroundColor: color,\n        transform: [{\n          scale: progress.interpolate({\n            inputRange: [0, 0.67, 1],\n            outputRange: index ? [0.4, 0.6, 0.4] : [0.4, 0.6, 1.0]\n          })\n        }],\n        opacity: progress.interpolate({\n          inputRange: [0, 0.67, 1],\n          outputRange: index ? [1.0, 1.0, 1.0] : [0.5, 0.5, 0.0]\n        })\n      };\n      return React.createElement(Animated.View, _extends({\n        style: styles.layer\n      }, {\n        key: index\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: pulseStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          width = _this$props2.size,\n          height = _this$props2.size,\n          props = _objectWithoutProperties(_this$props2, [\"style\", \"size\", \"size\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(Indicator, _extends({\n        style: {\n          width: width,\n          height: height\n        },\n        renderComponent: this.renderComponent\n      }, props, {\n        count: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return PulseIndicator;\n}(PureComponent);\n\nPulseIndicator.defaultProps = {\n  animationEasing: Easing.out(Easing.ease),\n  color: 'rgb(0, 0, 0)',\n  size: 40\n};\nPulseIndicator.propTypes = _objectSpread(_objectSpread({}, Indicator.propTypes), {}, {\n  color: PropTypes.string,\n  size: PropTypes.number\n});\nexport { PulseIndicator as default };","map":{"version":3,"sources":["C:/Users/zouhair/works/Desktop/Les Projets/APP2 covid/TeleCovid_SurveyApp-Frontend/node_modules/react-native-indicators/src/components/pulse-indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","styles","PulseIndicator","props","renderComponent","bind","index","count","progress","size","color","pulseStyle","height","width","borderRadius","backgroundColor","transform","scale","interpolate","inputRange","outputRange","opacity","layer","key","style","container","defaultProps","animationEasing","Easing","out","ease","propTypes","string","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated, Easing } from 'react-native';\n\nimport Indicator from '../indicator';\nimport styles from './styles';\n\nexport default class PulseIndicator extends PureComponent {\n  static defaultProps = {\n    animationEasing: Easing.out(Easing.ease),\n\n    color: 'rgb(0, 0, 0)',\n    size: 40,\n  };\n\n  static propTypes = {\n    ...Indicator.propTypes,\n\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderComponent = this.renderComponent.bind(this);\n  }\n\n  renderComponent({ index, count, progress }) {\n    let { size, color } = this.props;\n\n    let pulseStyle = {\n      height: size,\n      width: size,\n      borderRadius: size / 2,\n      backgroundColor: color,\n      transform: [{\n        scale: progress.interpolate({\n          inputRange: [0, 0.67, 1],\n          outputRange: index?\n            [0.4, 0.6, 0.4]:\n            [0.4, 0.6, 1.0],\n        }),\n      }],\n      opacity: progress.interpolate({\n        inputRange: [0, 0.67, 1],\n        outputRange: index?\n          [1.0, 1.0, 1.0]:\n          [0.5, 0.5, 0.0],\n      }),\n    };\n\n    return (\n      <Animated.View style={styles.layer} {...{ key: index }}>\n        <Animated.View style={pulseStyle} />\n      </Animated.View>\n    );\n  }\n\n  render() {\n    let { style, size: width, size: height, ...props } = this.props;\n\n    return (\n      <View style={[styles.container, style]}>\n        <Indicator\n          style={{ width, height }}\n          renderComponent={this.renderComponent}\n          {...props}\n          count={2}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}