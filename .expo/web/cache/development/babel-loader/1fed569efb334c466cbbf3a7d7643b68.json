{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\zouhair\\\\works\\\\Desktop\\\\Les Projets\\\\APP2 covid\\\\TeleCovid_SurveyApp-Frontend\\\\node_modules\\\\react-native-indicators\\\\src\\\\components\\\\indicator\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\n\nvar Indicator = function (_PureComponent) {\n  _inherits(Indicator, _PureComponent);\n\n  var _super = _createSuper(Indicator);\n\n  function Indicator(props) {\n    var _this;\n\n    _classCallCheck(this, Indicator);\n\n    _this = _super.call(this, props);\n    _this.animationState = 0;\n    _this.savedValue = 0;\n    var animating = _this.props.animating;\n    _this.state = {\n      progress: new Animated.Value(0),\n      hideAnimation: new Animated.Value(animating ? 1 : 0)\n    };\n    return _this;\n  }\n\n  _createClass(Indicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n\n      if (animating) {\n        this.startAnimation();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var animating = this.props.animating;\n\n      if (animating && !prevProps.animating) {\n        this.resumeAnimation();\n      }\n\n      if (!animating && prevProps.animating) {\n        this.stopAnimation();\n      }\n\n      if (animating ^ prevProps.animating) {\n        var hideAnimation = this.state.hideAnimation;\n        var duration = this.props.hideAnimationDuration;\n        Animated.timing(hideAnimation, {\n          toValue: animating ? 1 : 0,\n          duration: duration\n        }).start();\n      }\n    }\n  }, {\n    key: \"startAnimation\",\n    value: function startAnimation() {\n      var progress = this.state.progress;\n      var _this$props = this.props,\n          interaction = _this$props.interaction,\n          animationEasing = _this$props.animationEasing,\n          animationDuration = _this$props.animationDuration;\n\n      if (0 !== this.animationState) {\n        return;\n      }\n\n      var animation = Animated.timing(progress, {\n        duration: animationDuration,\n        easing: animationEasing,\n        useNativeDriver: true,\n        isInteraction: interaction,\n        toValue: 1\n      });\n      Animated.loop(animation).start();\n      this.animationState = 1;\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation() {\n      var _this2 = this;\n\n      var progress = this.state.progress;\n\n      if (1 !== this.animationState) {\n        return;\n      }\n\n      var listener = progress.addListener(function (_ref) {\n        var value = _ref.value;\n        progress.removeListener(listener);\n        progress.stopAnimation(function () {\n          return _this2.saveAnimation(value);\n        });\n      });\n      this.animationState = -1;\n    }\n  }, {\n    key: \"saveAnimation\",\n    value: function saveAnimation(value) {\n      var animating = this.props.animating;\n      this.savedValue = value;\n      this.animationState = 0;\n\n      if (animating) {\n        this.resumeAnimation();\n      }\n    }\n  }, {\n    key: \"resumeAnimation\",\n    value: function resumeAnimation() {\n      var _this3 = this;\n\n      var progress = this.state.progress;\n      var _this$props2 = this.props,\n          interaction = _this$props2.interaction,\n          animationDuration = _this$props2.animationDuration;\n\n      if (0 !== this.animationState) {\n        return;\n      }\n\n      Animated.timing(progress, {\n        useNativeDriver: true,\n        isInteraction: interaction,\n        duration: (1 - this.savedValue) * animationDuration,\n        toValue: 1\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          progress.setValue(0);\n          _this3.animationState = 0;\n\n          _this3.startAnimation();\n        }\n      });\n      this.savedValue = 0;\n      this.animationState = 1;\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(item, index) {\n      var progress = this.state.progress;\n      var _this$props3 = this.props,\n          renderComponent = _this$props3.renderComponent,\n          count = _this$props3.count;\n\n      if ('function' === typeof renderComponent) {\n        return renderComponent({\n          index: index,\n          count: count,\n          progress: progress\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hideAnimation = this.state.hideAnimation;\n\n      var _this$props4 = this.props,\n          count = _this$props4.count,\n          hidesWhenStopped = _this$props4.hidesWhenStopped,\n          props = _objectWithoutProperties(_this$props4, [\"count\", \"hidesWhenStopped\"]);\n\n      if (hidesWhenStopped) {\n        props.style = [].concat(props.style || [], {\n          opacity: hideAnimation\n        });\n      }\n\n      return React.createElement(Animated.View, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }), Array.from(new Array(count), this.renderComponent, this));\n    }\n  }]);\n\n  return Indicator;\n}(PureComponent);\n\nIndicator.defaultProps = {\n  animationEasing: Easing.linear,\n  animationDuration: 1200,\n  hideAnimationDuration: 200,\n  animating: true,\n  interaction: true,\n  hidesWhenStopped: true,\n  count: 1\n};\nIndicator.propTypes = {\n  animationEasing: PropTypes.func,\n  animationDuration: PropTypes.number,\n  hideAnimationDuration: PropTypes.number,\n  animating: PropTypes.bool,\n  interaction: PropTypes.bool,\n  hidesWhenStopped: PropTypes.bool,\n  renderComponent: PropTypes.func,\n  count: PropTypes.number\n};\nexport { Indicator as default };","map":{"version":3,"sources":["C:/Users/zouhair/works/Desktop/Les Projets/APP2 covid/TeleCovid_SurveyApp-Frontend/node_modules/react-native-indicators/src/components/indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","props","animationState","savedValue","animating","state","progress","Animated","Value","hideAnimation","startAnimation","prevProps","resumeAnimation","stopAnimation","duration","hideAnimationDuration","timing","toValue","start","interaction","animationEasing","animationDuration","animation","easing","useNativeDriver","isInteraction","loop","listener","addListener","value","removeListener","saveAnimation","finished","setValue","item","index","renderComponent","count","hidesWhenStopped","style","concat","opacity","Array","from","defaultProps","Easing","linear","propTypes","func","number","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated, Easing } from 'react-native';\n\nexport default class Indicator extends PureComponent {\n  static defaultProps = {\n    animationEasing: Easing.linear,\n    animationDuration: 1200,\n    hideAnimationDuration: 200,\n\n    animating: true,\n    interaction: true,\n    hidesWhenStopped: true,\n\n    count: 1,\n  };\n\n  static propTypes = {\n    animationEasing: PropTypes.func,\n    animationDuration: PropTypes.number,\n    hideAnimationDuration: PropTypes.number,\n\n    animating: PropTypes.bool,\n    interaction: PropTypes.bool,\n    hidesWhenStopped: PropTypes.bool,\n\n    renderComponent: PropTypes.func,\n    count: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    /*\n     *  0 -> 1\n     *    | startAnimation\n     *    | resumeAnimation\n     *\n     *  1 -> -1\n     *    | stopAnimation\n     *\n     * -1 -> 0\n     *    | saveAnimation\n     */\n    this.animationState = 0;\n    this.savedValue = 0;\n\n    let { animating } = this.props;\n\n    this.state = {\n      progress: new Animated.Value(0),\n      hideAnimation: new Animated.Value(animating? 1 : 0),\n    };\n  }\n\n  componentDidMount() {\n    let { animating } = this.props;\n\n    if (animating) {\n      this.startAnimation();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    let { animating } = this.props;\n\n    if (animating && !prevProps.animating) {\n      this.resumeAnimation();\n    }\n\n    if (!animating && prevProps.animating) {\n      this.stopAnimation();\n    }\n\n    if (animating ^ prevProps.animating) {\n      let { hideAnimation } = this.state;\n      let { hideAnimationDuration: duration } = this.props;\n\n      Animated\n        .timing(hideAnimation, { toValue: animating? 1 : 0, duration })\n        .start();\n    }\n  }\n\n  startAnimation() {\n    let { progress } = this.state;\n    let { interaction, animationEasing, animationDuration } = this.props;\n\n    if (0 !== this.animationState) {\n      return;\n    }\n\n    let animation = Animated\n      .timing(progress, {\n        duration: animationDuration,\n        easing: animationEasing,\n        useNativeDriver: true,\n        isInteraction: interaction,\n        toValue: 1,\n      });\n\n    Animated\n      .loop(animation)\n      .start();\n\n    this.animationState = 1;\n  }\n\n  stopAnimation() {\n    let { progress } = this.state;\n\n    if (1 !== this.animationState) {\n      return;\n    }\n\n    let listener = progress\n      .addListener(({ value }) => {\n        progress.removeListener(listener);\n        progress.stopAnimation(() => this.saveAnimation(value));\n      });\n\n    this.animationState = -1;\n  }\n\n  saveAnimation(value) {\n    let { animating } = this.props;\n\n    this.savedValue = value;\n    this.animationState = 0;\n\n    if (animating) {\n      this.resumeAnimation();\n    }\n  }\n\n  resumeAnimation() {\n    let { progress } = this.state;\n    let { interaction, animationDuration } = this.props;\n\n    if (0 !== this.animationState) {\n      return;\n    }\n\n    Animated\n      .timing(progress, {\n        useNativeDriver: true,\n        isInteraction: interaction,\n        duration: (1 - this.savedValue) * animationDuration,\n        toValue: 1,\n      })\n      .start(({ finished }) => {\n        if (finished) {\n          progress.setValue(0);\n\n          this.animationState = 0;\n          this.startAnimation();\n        }\n      });\n\n    this.savedValue = 0;\n    this.animationState = 1;\n  }\n\n  renderComponent(item, index) {\n    let { progress } = this.state;\n    let { renderComponent, count } = this.props;\n\n    if ('function' === typeof renderComponent) {\n      return renderComponent({ index, count, progress });\n    }\n\n    return null;\n  }\n\n  render() {\n    let { hideAnimation } = this.state;\n    let { count, hidesWhenStopped, ...props } = this.props;\n\n    if (hidesWhenStopped) {\n      props.style = []\n        .concat(props.style || [], { opacity: hideAnimation });\n    }\n\n    return (\n      <Animated.View {...props}>\n        {Array.from(new Array(count), this.renderComponent, this)}\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}