{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\zouhair\\\\works\\\\Desktop\\\\Les Projets\\\\APP2 covid\\\\TeleCovid_SurveyApp-Frontend\\\\node_modules\\\\react-native-indicators\\\\src\\\\components\\\\material-indicator\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Indicator from \"../indicator\";\nimport styles from \"./styles\";\n\nvar MaterialIndicator = function (_PureComponent) {\n  _inherits(MaterialIndicator, _PureComponent);\n\n  var _super = _createSuper(MaterialIndicator);\n\n  function MaterialIndicator() {\n    var _this;\n\n    _classCallCheck(this, MaterialIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderComponent = function (_ref) {\n      var index = _ref.index,\n          count = _ref.count,\n          progress = _ref.progress;\n      var _this$props = _this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          _this$props$trackWidt = _this$props.trackWidth,\n          borderWidth = _this$props$trackWidt === void 0 ? size / 10 : _this$props$trackWidt,\n          animationDuration = _this$props.animationDuration;\n      var frames = 60 * animationDuration / 1000;\n      var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n      var sa = 7.5;\n      var ea = 30;\n      var sequences = 3;\n      var rotations = 5;\n      var inputRange = Array.from(new Array(frames), function (item, frameIndex) {\n        return frameIndex / (frames - 1);\n      });\n      var outputRange = Array.from(new Array(frames), function (item, frameIndex) {\n        var progress = 2 * sequences * frameIndex / (frames - 1);\n        var rotation = index ? +(360 - sa) : -(180 - sa);\n        var sequence = Math.ceil(progress);\n\n        if (sequence % 2) {\n          progress = progress - sequence + 1;\n        } else {\n          progress = sequence - progress;\n        }\n\n        var direction = index ? -1 : +1;\n        return direction * (180 - (sa + ea)) * easing(progress) + rotation + 'deg';\n      });\n      var layerStyle = {\n        width: size,\n        height: size,\n        transform: [{\n          rotate: 90 - sa + 'deg'\n        }, {\n          rotate: progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', 360 * rotations + 'deg']\n          })\n        }]\n      };\n      var viewportStyle = {\n        width: size,\n        height: size,\n        transform: [{\n          translateY: index ? -size / 2 : 0\n        }, {\n          rotate: progress.interpolate({\n            inputRange: inputRange,\n            outputRange: outputRange\n          })\n        }]\n      };\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      var offsetStyle = index ? {\n        top: size / 2\n      } : null;\n      var lineStyle = {\n        width: size,\n        height: size,\n        borderColor: color,\n        borderRadius: size / 2,\n        borderWidth: borderWidth\n      };\n      return React.createElement(Animated.View, _extends({\n        style: styles.layer\n      }, {\n        key: index\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: layerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [containerStyle, offsetStyle],\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: viewportStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, {\n        style: containerStyle,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, React.createElement(Animated.View, {\n        style: lineStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(MaterialIndicator, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          width = _this$props2.size,\n          height = _this$props2.size,\n          props = _objectWithoutProperties(_this$props2, [\"style\", \"size\", \"size\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, React.createElement(Indicator, _extends({\n        style: {\n          width: width,\n          height: height\n        },\n        renderComponent: this._renderComponent\n      }, props, {\n        count: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return MaterialIndicator;\n}(PureComponent);\n\nMaterialIndicator.defaultProps = {\n  animationDuration: 4000,\n  color: 'rgb(0, 0, 0)',\n  size: 40\n};\nMaterialIndicator.propTypes = _objectSpread(_objectSpread({}, Indicator.propTypes), {}, {\n  trackWidth: PropTypes.number,\n  color: PropTypes.string,\n  size: PropTypes.number\n});\nexport { MaterialIndicator as default };","map":{"version":3,"sources":["C:/Users/zouhair/works/Desktop/Les Projets/APP2 covid/TeleCovid_SurveyApp-Frontend/node_modules/react-native-indicators/src/components/material-indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","styles","MaterialIndicator","_renderComponent","index","count","progress","props","size","color","trackWidth","borderWidth","animationDuration","frames","easing","Easing","bezier","sa","ea","sequences","rotations","inputRange","Array","from","item","frameIndex","outputRange","rotation","sequence","Math","ceil","direction","layerStyle","width","height","transform","rotate","interpolate","viewportStyle","translateY","containerStyle","overflow","offsetStyle","top","lineStyle","borderColor","borderRadius","layer","key","style","container","defaultProps","propTypes","number","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated, Easing } from 'react-native';\n\nimport Indicator from '../indicator';\nimport styles from './styles';\n\nexport default class MaterialIndicator extends PureComponent {\n  static defaultProps = {\n    animationDuration: 4000,\n\n    color: 'rgb(0, 0, 0)',\n    size: 40,\n  };\n\n  static propTypes = {\n    ...Indicator.propTypes,\n\n    trackWidth: PropTypes.number,\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  _renderComponent = ({ index, count, progress }) => {\n    let {\n      size,\n      color,\n      trackWidth: borderWidth = size / 10,\n      animationDuration,\n    } = this.props;\n\n    let frames = 60 * animationDuration / 1000;\n    let easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\n    let sa = 7.5;\n    let ea = 30;\n\n    let sequences = 3;\n    let rotations = 5;\n\n    let inputRange = Array\n      .from(new Array(frames), (item, frameIndex) => frameIndex / (frames - 1));\n\n    let outputRange = Array\n      .from(new Array(frames), (item, frameIndex) => {\n        let progress = 2 * sequences * frameIndex / (frames - 1);\n        let rotation = index?\n          +(360 - sa):\n          -(180 - sa);\n\n        let sequence = Math.ceil(progress);\n\n        if (sequence % 2) {\n          progress = progress - sequence + 1;\n        } else {\n          progress = sequence - progress;\n        }\n\n        let direction = index?\n          -1:\n          +1;\n\n        return (direction * (180 - (sa + ea)) * easing(progress) + rotation) + 'deg';\n      });\n\n    let layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: (90 - sa) + 'deg',\n      }, {\n        rotate: progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', (360 * rotations) + 'deg'],\n        }),\n      }],\n    };\n\n    let viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index?\n          -size / 2:\n          0,\n      }, {\n        rotate: progress.interpolate({ inputRange, outputRange }),\n      }],\n    };\n\n    let containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    let offsetStyle = index?\n      { top: size / 2 }:\n      null;\n\n    let lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderRadius: size / 2,\n      borderWidth,\n    };\n\n    return (\n      <Animated.View style={styles.layer} {...{ key: index }}>\n        <Animated.View style={layerStyle}>\n          <Animated.View style={[containerStyle, offsetStyle]} collapsable={false}>\n            <Animated.View style={viewportStyle}>\n              <Animated.View style={containerStyle} collapsable={false}>\n                <Animated.View style={lineStyle} />\n              </Animated.View>\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    let { style, size: width, size: height, ...props } = this.props;\n\n    return (\n      <View style={[styles.container, style]}>\n        <Indicator\n          style={{ width, height }}\n          renderComponent={this._renderComponent}\n          {...props}\n          count={2}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}