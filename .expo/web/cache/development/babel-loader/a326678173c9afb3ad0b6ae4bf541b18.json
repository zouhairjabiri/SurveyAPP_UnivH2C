{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\zouhair\\\\works\\\\Desktop\\\\Les Projets\\\\APP2 covid\\\\TeleCovid_SurveyApp-Frontend\\\\node_modules\\\\react-native-indicators\\\\src\\\\components\\\\skype-indicator\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Indicator from \"../indicator\";\nimport styles from \"./styles\";\n\nvar SkypeIndicator = function (_PureComponent) {\n  _inherits(SkypeIndicator, _PureComponent);\n\n  var _super = _createSuper(SkypeIndicator);\n\n  function SkypeIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, SkypeIndicator);\n\n    _this = _super.call(this, props);\n    _this.renderComponent = _this.renderComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SkypeIndicator, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var index = _ref.index,\n          count = _ref.count,\n          progress = _ref.progress;\n      var _this$props = this.props,\n          size = _this$props.size,\n          minScale = _this$props.minScale,\n          maxScale = _this$props.maxScale,\n          backgroundColor = _this$props.color,\n          animationDuration = _this$props.animationDuration;\n      var frames = 60 * animationDuration / 1000;\n      var offset = index / (count - 1);\n      var easing = Easing.bezier(0.5, offset, 0.5, 1.0);\n      var inputRange = Array.from(new Array(frames), function (item, index) {\n        return index / (frames - 1);\n      });\n      var outputRange = Array.from(new Array(frames), function (item, index) {\n        return easing(index / (frames - 1)) * 360 + 'deg';\n      });\n      var layerStyle = {\n        transform: [{\n          rotate: progress.interpolate({\n            inputRange: inputRange,\n            outputRange: outputRange\n          })\n        }]\n      };\n      var ballStyle = {\n        width: size / 5,\n        height: size / 5,\n        borderRadius: size / 10,\n        backgroundColor: backgroundColor,\n        transform: [{\n          scale: progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [maxScale - (maxScale - minScale) * offset, minScale + (maxScale - minScale) * offset]\n          })\n        }]\n      };\n      return React.createElement(Animated.View, _extends({\n        style: [styles.layer, layerStyle]\n      }, {\n        key: index\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: ballStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          width = _this$props2.size,\n          height = _this$props2.size,\n          props = _objectWithoutProperties(_this$props2, [\"style\", \"size\", \"size\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, React.createElement(Indicator, _extends({\n        style: {\n          width: width,\n          height: height\n        },\n        renderComponent: this.renderComponent\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return SkypeIndicator;\n}(PureComponent);\n\nSkypeIndicator.defaultProps = {\n  animationDuration: 1600,\n  color: 'rgb(0, 0, 0)',\n  count: 5,\n  size: 40,\n  minScale: 0.2,\n  maxScale: 1.0\n};\nSkypeIndicator.propTypes = _objectSpread(_objectSpread({}, Indicator.propTypes), {}, {\n  color: PropTypes.string,\n  size: PropTypes.number,\n  minScale: PropTypes.number,\n  maxScale: PropTypes.number\n});\nexport { SkypeIndicator as default };","map":{"version":3,"sources":["C:/Users/zouhair/works/Desktop/Les Projets/APP2 covid/TeleCovid_SurveyApp-Frontend/node_modules/react-native-indicators/src/components/skype-indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","styles","SkypeIndicator","props","renderComponent","bind","index","count","progress","size","minScale","maxScale","backgroundColor","color","animationDuration","frames","offset","easing","Easing","bezier","inputRange","Array","from","item","outputRange","layerStyle","transform","rotate","interpolate","ballStyle","width","height","borderRadius","scale","layer","key","style","container","defaultProps","propTypes","string","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated, Easing } from 'react-native';\n\nimport Indicator from '../indicator';\nimport styles from './styles';\n\nexport default class SkypeIndicator extends PureComponent {\n  static defaultProps = {\n    animationDuration: 1600,\n\n    color: 'rgb(0, 0, 0)',\n    count: 5,\n    size: 40,\n\n    minScale: 0.2,\n    maxScale: 1.0,\n  };\n\n  static propTypes = {\n    ...Indicator.propTypes,\n\n    color: PropTypes.string,\n    size: PropTypes.number,\n\n    minScale: PropTypes.number,\n    maxScale: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderComponent = this.renderComponent.bind(this);\n  }\n\n  renderComponent({ index, count, progress }) {\n    let { size, minScale, maxScale, color: backgroundColor, animationDuration } = this.props;\n    let frames = 60 * animationDuration / 1000;\n    let offset = index / (count - 1);\n    let easing = Easing.bezier(0.5, offset, 0.5, 1.0);\n\n    let inputRange = Array\n      .from(new Array(frames), (item, index) => index / (frames - 1));\n\n    let outputRange = Array\n      .from(new Array(frames), (item, index) => easing(index / (frames - 1)) * 360 + 'deg');\n\n    let layerStyle = {\n      transform: [{\n        rotate: progress.interpolate({ inputRange, outputRange }),\n      }],\n    };\n\n    let ballStyle = {\n      width: size / 5,\n      height: size / 5,\n      borderRadius: size / 10,\n      backgroundColor,\n      transform: [{\n        scale: progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [\n            maxScale - (maxScale - minScale) * offset,\n            minScale + (maxScale - minScale) * offset,\n          ],\n        }),\n      }],\n    };\n\n    return (\n      <Animated.View style={[styles.layer, layerStyle]} {...{ key: index }}>\n        <Animated.View style={ballStyle} />\n      </Animated.View>\n    );\n  }\n\n  render() {\n    let { style, size: width, size: height, ...props } = this.props;\n\n    return (\n      <View style={[styles.container, style]}>\n        <Indicator\n          style={{ width, height }}\n          renderComponent={this.renderComponent}\n          {...props}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}